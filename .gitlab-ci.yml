stages:
    - preevaluation
    - synthesis
    - benchmark
    - analysis
    - release

variables:
    TAG_NAME: cibuild-${CI_PIPELINE_IID}
    RELEASE_NAME: CI build ${CI_PIPELINE_IID}
    PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

default:
    before_script:
        - module reset
        - module load lang fpga devel intel/oneapi bittware/520n Boost CMake Julia
        - icpx --version
        - julia --version
        - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'

workflow:
    rules:
        - if: $CI_COMMIT_TAG
          when: never           # Don't run the pipeline for tags
        - if: $CI_COMMIT_BRANCH == "continous_benchmarking"

documentation:
    stage: preevaluation
    tags:
        - docker-shared
    image: alpine
    before_script:
        - apk add --no-cache doxygen graphviz font-noto
    script:
        - doxygen
    artifacts:
        paths:
            - doxygen/html

# ==================
# Hotspot (monotile)
# ==================

hotspot (monotile) synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 8 --mem 4G
    script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make hotspot_cpu
        - cd examples/hotspot
        - mv hotspot_cpu hotspot_monotile
        - tar -caf hotspot_monotile.tar.gz hotspot_monotile
        - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file hotspot_monotile.tar.gz "${PACKAGE_REGISTRY_URL}/hotspot_monotile/${TAG_NAME}/hotspot_monotile.tar.gz"'
    artifacts:
        when: always
        paths:
            - build/examples/hotspot/hotspot_monotile
            - build/examples/hotspot/hotspot_monotile.tar.gz

hotspot (monotile) benchmark:
    stage: benchmark
    needs: 
        - hotspot (monotile) synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 16 --mem 32G
        DPCPP_CPU_NUM_CUS: 16
    script:
        - cd examples/hotspot
        - ./scripts/benchmark.jl ../../build/examples/hotspot/hotspot_monotile monotile
    artifacts:
        paths:
            - examples/hotspot/metrics.monotile.json

# ================
# Hotspot (tiling)
# ================

hotspot (tiling) synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS:  -A hpc-lco-kenter -p normal -t 00:15:00 -c 8 --mem 4G
    script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make hotspot_cpu
        - cd examples/hotspot
        - mv hotspot_cpu hotspot_tiling
        - tar -caf hotspot_tiling.tar.gz hotspot_tiling
        - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file hotspot_tiling.tar.gz "${PACKAGE_REGISTRY_URL}/hotspot_tiling/${TAG_NAME}/hotspot_tiling.tar.gz"'
    artifacts:
        when: always
        paths:
            - build/examples/hotspot/hotspot_tiling
            - build/examples/hotspot/hotspot_tiling.tar.gz

hotspot (tiling) benchmark:
    stage: benchmark
    needs: 
        - hotspot (tiling) synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 16 --mem 32G
        DPCPP_CPU_NUM_CUS: 16
    script:
        - cd examples/hotspot
        - ./scripts/benchmark.jl ../../build/examples/hotspot/hotspot_tiling tiling
    artifacts:
        paths:
            - examples/hotspot/metrics.tiling.json

# =======
# Release
# =======

release:
    stage: release
    when: always
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -c 8 --mem 2G -t 00:05:00
    script:
        - ./scripts/publish-release.sh