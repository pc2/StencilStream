stages:
    - preevaluation
    - synthesis
    - benchmark
    - analysis
    - release

variables:
    TAG_NAME: cibuild-${CI_PIPELINE_IID}
    RELEASE_NAME: CI build ${CI_PIPELINE_IID}
    PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

default:
    before_script:
        - module reset
        - module load lang fpga devel intel/oneapi bittware/520n Boost CMake Julia
        - icpx --version
        - julia --version

workflow:
    rules:
        - if: $CI_COMMIT_TAG
          when: never           # Don't run the pipeline for tags
        - if: $CI_COMMIT_BRANCH == "continous_benchmarking"

documentation:
    stage: preevaluation
    tags:
        - docker-shared
    image: alpine
    before_script:
        - apk add --no-cache doxygen graphviz font-noto
    script:
        - doxygen
    artifacts:
        paths:
            - doxygen/html

unit_test:
    stage: preevaluation
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 0:05:00 -c 14 --mem 4G
    script:
        - mkdir -p build
        - cd build
        - cmake ..
        - make unit_test -j14
        - ./tests/unit_test

convection synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        #SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -q fpgasynthesis -t 1-00:00:00 -c 8 --mem 120G
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:05:00 -c 8 --mem 8G
    script:
        - mkdir -p build
        - cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make convection_cpu
        - make convection_report
        - cd examples/convection
        - mv convection_cpu convection
        - mv convection_report.prj convection.prj
        - tar -caf convection.tar.gz convection convection.prj/reports
        - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file convection.tar.gz "${PACKAGE_REGISTRY_URL}/convection/${TAG_NAME}/convection.tar.gz"'
    artifacts:
        when: always
        paths:
            - build/examples/convection/convection
            - build/examples/convection/convection.prj/reports


convection benchmark:
    stage: benchmark
    needs: 
        - convection synthesis
    tags:
        - noctua2
    variables:
        #SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p fpga --constraint=bittware_520n_20.4.0_hpc -t 00:15:00
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -c 16 --mem 8G -t 00:30:00
    script:
        - cd examples/convection
        - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'
        - ./scripts/benchmark.jl default ../../build/examples/convection/convection
    artifacts:
        paths:
            - examples/convection/out
            - examples/convection/metrics.json
            #- examples/convection/pseudo_transient_runtimes.csv

release:
    stage: release
    only:
        #- staging
        #- main
        - continous_benchmarking
    needs:
        - convection benchmark
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -c 8 --mem 2G -t 00:05:00
    script:
        # Adding the performance data to the table
        - git clone git@git.uni-paderborn.de:pc2/sycl-stencil.wiki.git wiki
        - cd wiki
        - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'
        - ./Performance-tracking/add_data.jl Convection $TAG_NAME ../examples/convection/metrics.json
        - ./Performance-tracking/render-site.jl > Performance-tracking.md
        - git stage Performance-tracking.md Performance-tracking/data.csv
        - git commit -m "Adding performance data of $TAG_NAME"
        #- git push # Don't push yet, I don't want to revert all these commits manually
        - cd ..

        # Downloading the release cli tool
        - curl -L https://gitlab.com/gitlab-org/release-cli/-/releases/v0.15.0/downloads/bin/release-cli-linux-amd64 > release-cli
        - echo "d59169bab5dfe4693af4f181b08bf11ef1c96a4da30eff0f04abb236c54e62e9  release-cli" | sha256sum -c
        - chmod +x release-cli

        # Creating the release
        - ./release-cli create
            --name "${RELEASE_NAME}" --tag-name "${TAG_NAME}" --ref "${CI_COMMIT_SHA}"
            --assets-link "{\"name\":\"convection.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/convection/${TAG_NAME}/convection.tar.gz\"}"