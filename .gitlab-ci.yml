stages:
    - preevaluation
    - synthesis
    - benchmark
    - analysis

default:
    before_script:
        - "module reset"
        - "module load lang fpga devel intel/oneapi bittware/520n Boost CMake Julia"
        - "icpx --version"
        - "julia --version"

documentation:
    stage: preevaluation
    only:
        - staging
        - main
    tags:
        - docker-shared
    image: "alpine"
    before_script:
        - apk add --no-cache doxygen graphviz font-noto
    script:
        - doxygen
    artifacts:
        paths:
            - "doxygen/html"

unit_test:
    stage: preevaluation
    only:
        - staging
        - main
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: "-A hpc-lco-kenter -p normal -t 0:05:00 -c 14 --mem 4G"
    script:
        - "mkdir -p build"
        - "cd build"
        - "cmake .."
        - "make unit_test -j14"
        - "./tests/unit_test"

convection synthesis:
    stage: synthesis
    only:
        - staging
        - main
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: "-A hpc-lco-kenter -p normal -q fpgasynthesis -t 1-00:00:00 -c 8 --mem 120G"
    script:
        - "mkdir -p build"
        - "cd build"
        - "cmake -DCMAKE_BUILD_TYPE=Release .."
        - "make convection"
    artifacts:
        when: always
        paths:
            - "build/examples/convection/convection"
            - "build/examples/convection/convection.prj/reports"


convection benchmark:
    stage: benchmark
    only:
        - staging
        - main
    needs: 
        - "convection synthesis"
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: "-A hpc-lco-kenter -p fpga --constraint=bittware_520n_20.4.0_hpc -t 00:15:00"
    script:
        - "cd examples/convection"
        - "julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'"
        - "mkdir out"
        - "../../build/examples/convection/convection experiments/default.json out | julia --project analyze_log.jl fpga > metrics.txt"
    artifacts:
        reports:
            metrics: examples/convection/metrics.txt
        paths:
            - "examples/convection/out"
            - "examples/convection/profile.json"
            - "examples/convection/performance_fpga.csv"

convection reference benchmark:
    stage: benchmark
    only:
        - staging
        - main
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: "-A hpc-lco-kenter -p gpu -G 1 -c 8 -t 00:10:00"
    script:
        - "cd examples/convection"
        - "julia --project -O3 -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'"
        - "julia --project -t16 -O3 ./ThermalConvection2D.jl | julia --project -O3 analyze_log.jl gpu > metrics.txt"
    artifacts:
        reports:
            metrics: examples/convection/metrics.txt
        paths:
            - "examples/convection/reference_out"
            - "examples/convection/performance_gpu.csv"

convection benchmark analysis:
    stage: analysis
    only:
        - staging
        - main
    needs: 
        - "convection benchmark"
        - "convection reference benchmark"
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: "-A hpc-lco-kenter -p normal -c 8 -t 00:05:00"
    script:
        - "cd examples/convection"
        - "julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'"
        - "julia --project -t8 ./render_animation.jl out reference_out > metrics.txt"
    artifacts:
        reports:
            metrics: examples/convection/metrics.txt
        paths:
            - "examples/convection/animation.mp4"
