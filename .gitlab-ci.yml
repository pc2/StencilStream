stages:
    - preevaluation
    - synthesis
    - benchmark
    - analysis
    - release

variables:
    TAG_NAME: cibuild-${CI_PIPELINE_IID}
    RELEASE_NAME: CI build ${CI_PIPELINE_IID}
    PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

default:
    before_script:
        - module reset
        - module load lang fpga devel intel/oneapi bittware/520n Boost CMake Julia
        - icpx --version
        - julia --version
        - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'

workflow:
    rules:
        - if: $CI_COMMIT_TAG
          when: never           # Don't run the pipeline for tags
        - if: $CI_COMMIT_BRANCH == "continous_benchmarking"

documentation:
    stage: preevaluation
    tags:
        - docker-shared
    image: alpine
    before_script:
        - apk add --no-cache doxygen graphviz font-noto
    script:
        - doxygen
    artifacts:
        paths:
            - doxygen/html

#unit test:
#    stage: preevaluation
#    tags:
#        - noctua2
#    variables:
#        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 0:10:00 -c 16 --mem 4G
#    script:
#        - mkdir -p build
#        - cd build
#        - cmake ..
#        - make unit_test -j16
#        - ./tests/unit_test

# ==========
# Convection
# ==========

convection synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 8 --mem 4G
    script:
        - ./scripts/synthesize.sh "${PACKAGE_REGISTRY_URL}" "${TAG_NAME}" "convection" "convection_cpu"
    artifacts:
        when: always
        paths:
            - build/examples/convection/convection_cpu
            - build/examples/convection/convection_cpu.tar.gz

convection benchmark:
    stage: benchmark
    needs: 
        - convection synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 16 --mem 32G
        DPCPP_CPU_NUM_CUS: 16
    script:
        - cd examples/convection
        - ./scripts/benchmark.jl default ../../build/examples/convection/convection_cpu
        - ./scripts/render_animation.jl out
    artifacts:
        paths:
            - examples/convection/out
            - examples/convection/animation.mp4
            - examples/convection/metrics.json
            - examples/convection/pseudo_transient_runtimes.csv

# ==================
# Hotspot (CPU)
# ==================

hotspot (cpu) synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 8 --mem 4G
    script:
        - ./scripts/synthesize.sh "${PACKAGE_REGISTRY_URL}" "${TAG_NAME}" "hotspot" "hotspot_cpu"
    artifacts:
        when: always
        paths:
            - build/examples/hotspot/hotspot_cpu
            - build/examples/hotspot/hotspot_cpu.tar.gz

hotspot (cpu) benchmark:
    stage: benchmark
    needs: 
        - hotspot (cpu) synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 16 --mem 32G
        DPCPP_CPU_NUM_CUS: 16
    script:
        - cd examples/hotspot
        - ./scripts/benchmark.jl ../../build/examples/hotspot/hotspot_cpu monotile
    artifacts:
        paths:
            - examples/hotspot/metrics.monotile.json

# ==================
# FDTD (CPU)
# ==================

fdtd (cpu) synthesis:
    stage: synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 8 --mem 4G
    script:
        - ./scripts/synthesize.sh "${PACKAGE_REGISTRY_URL}" "${TAG_NAME}" "fdtd" "fdtd_coef_device_cpu"
    artifacts:
        when: always
        paths:
            - build/examples/fdtd/fdtd_coef_device_cpu
            - build/examples/fdtd/fdtd_coef_device_cpu.tar.gz

fdtd (cpu) benchmark:
    stage: benchmark
    needs: 
        - fdtd (cpu) synthesis
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -t 00:15:00 -c 16 --mem 32G
        DPCPP_CPU_NUM_CUS: 16
    script:
        - cd examples/fdtd
        - ./scripts/benchmark.jl ../../build/examples/fdtd/fdtd_coef_device_cpu monotile
    artifacts:
        paths:
            - examples/hotspot/metrics.monotile.json

# =======
# Release
# =======

release:
    stage: release
    when: always
    tags:
        - noctua2
    variables:
        SCHEDULER_PARAMETERS: -A hpc-lco-kenter -p normal -c 8 --mem 2G -t 00:05:00
    script:
        - ./scripts/publish-release.sh